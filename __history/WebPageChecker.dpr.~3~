program WebPageChecker;

uses
  System.SysUtils,
  System.Classes,
  Winapi.Windows,
  Winapi.WinInet,
  MMSystem;

// for sound notification

type
  I_WebChecker = interface ['{DEED666F-0AC9-4D39-9E89-DF8FECCCB61B}']

    function SetURL(const aURL: string): I_WebChecker;
    function CheckService: I_WebChecker;
    function DisplayProgress: I_WebChecker;
    function Notify: I_WebChecker;
  end;

  TWebChecker = class(TInterfacedObject, I_WebChecker)
  strict private
    fURL        : string;
    fServiceOpen: Boolean;
  private
    function SetURL(const aURL: string): I_WebChecker;
    function CheckService: I_WebChecker;
    function DisplayProgress: I_WebChecker;
    function Notify: I_WebChecker;
  end;

function TWebChecker.SetURL(const aURL: string): I_WebChecker;
begin
  fURL   := aURL;

  Result := Self;
end;

function TWebChecker.CheckService: I_WebChecker;
var
  L_hInet, L_hUrl: PHINTERNET;
begin
  fServiceOpen := False;
  L_hInet      := InternetOpen('WebChecker', INTERNET_OPEN_TYPE_PRECONFIG, nil, nil, 0);

  if Assigned(L_hInet) then
  try
    L_hUrl := InternetOpenUrl(L_hInet, PChar(fURL), nil, 0, INTERNET_FLAG_RELOAD, 0);
    if Assigned(L_hUrl) then
    try
      fServiceOpen := True;
    finally
      InternetCloseHandle(L_hUrl);
    end;
  finally
    InternetCloseHandle(L_hInet);
  end;

  Result := Self;
end;

const
  CHECK_INTERVAL = 3000; // 3 seconds

function TWebChecker.DisplayProgress: I_WebChecker;
const
  L_TotalSteps = 10;
var
  I: Integer;
begin
  Write('Checking service');
  for I := 1 to L_TotalSteps do
  begin
    Sleep(CHECK_INTERVAL div L_TotalSteps);
    Write('.');
  end;
  WriteLn;

  Result := Self;
end;

function TWebChecker.Notify: I_WebChecker;
begin
  if fServiceOpen then
  begin
    Writeln('Service is OPEN!');
    sndPlaySound('C:\Windows\Media\Windows Ding.wav', SND_FILENAME or SND_ASYNC);
  end
  else
  begin
    Writeln('Service is CLOSED.');
  end;

  Result := Self;
end;

var
  WebChecker: I_WebChecker;
  URL: string;
begin
  Writeln('Web Page Service Checker');
  Write('Enter URL to check: ');
  Readln(URL);

  WebChecker := TWebChecker.Create;
  while True do
  begin
    WebChecker.SetURL(URL)
               .DisplayProgress
               .CheckService
               .Notify;
    Sleep(CHECK_INTERVAL);
  end;
end.
